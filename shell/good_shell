#! /usr/bin/env python3

'''
    Author: Jose Eduardo Soto
    This is a good shell that uses fork, exec, and wait.
'''

import re, sys, os

good_shell_label = 'gs>'

while True:
    # Make a child process with fork
    rc = os.fork()

    # Fork fails
    if rc < 0:
        os.write(2, ('Could not fork process. Error Code:\t%d' % rc).encode())
        sys.exit(1)

    # Fork successful. Has its own virtual memory. RC is zero so it is child
    elif rc == 0:
        # Execute the commands given with exec()
        keyboard = input(

    else:
        # Wait until child process dies.
        wait_rc = os.wait()
            
        
    
    



